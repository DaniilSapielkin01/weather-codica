{"version":3,"sources":["api/api.js","constans.js","redux/city-reducer.js","redux/redux-store.js","components/Card/CardInfo/CardInfo.jsx","components/BodyCard/BodyCard.jsx","container/BodyCardContainer.js","components/Card/Card.jsx","container/CardContainer.js","components/SearchInput/SearchInput.jsx","container/CitiesContainer.js","App.js","index.js","components/BodyCard/BodyCard.module.css","components/Card/Card.module.css","components/Card/CardInfo/CardInfo.module.css","components/SearchInput/SearchInput.module.css"],"names":["baseUrl","urlParams","apiKey","cityAPI","city","axios","id","SET_CITY","UPDATE_CITY","DELETE_CARD","TOGGLE_IS_UPDATE","initialState","isUpdate","setCity","payload","type","reducers","combineReducers","cityPage","state","action","filter","card","form","formReducer","persistedState","localStorage","getItem","JSON","parse","store","createStore","applyMiddleware","thunkMiddleware","subscribe","setItem","stringify","getState","window","temp","Math","ceil","floor","CardInfo","props","main","name","weather","className","stl","map","w","src","icon","alt","description","charAt","toUpperCase","substr","toLowerCase","smallTemp","temp_max","temp_min","BodyCard","wind","cardWrapper","cardHeader","imgInfo","info","cardInfo","feels_like","speed","pressure","humidity","to","BodyCardContainer","React","memo","useState","cityCard","setCityCard","useEffect","cardId","Number","match","params","find","c","undefined","CircularProgress","color","compose","withRouter","connect","Card","handleClick","getImage","IconButton","btnDelete","aria-label","onClick","cardItem","Button","btnUpdate","variant","size","CardContainer","onDeleteCard","onUpdateCard","getImageIcon","renderTextField","label","input","meta","touched","invalid","error","custom","TextField","placeholder","helperText","SearchInput","handleSubmit","onSubmit","Field","component","reduxForm","mapDispatchToProps","getCity","dispatch","a","response","cityJSON","data","indexOf","getUpdateCity","onload","forEach","clear","values","searchCityInput","preloader","Grid","container","spacing","item","xs","direction","justify","alignItems","Container","maxWidth","exact","path","render","ReactDOM","basename","process","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.912ce2be.chunk.js","sourcesContent":["import * as axios from \"axios\";\n\nconst baseUrl = `https://api.openweathermap.org/data/2.5/`;\nconst urlParams = `&units=metric`;\n\nconst apiKey = `&appid=96af99685838b4a635f75c52dd72d75f`;\n\nexport const cityAPI = {\n  getCity(city) {\n    return axios.get(`${baseUrl}weather?${urlParams}&q=${city}${apiKey}`);\n  },\n  getCityId(id) {\n    return axios.get(`${baseUrl}weather?id=${id}${urlParams}${apiKey}`);\n  },\n};\n","export const SET_CITY = \"SET_CITY\";\nexport const UPDATE_CITY = \"UPDATE_CITY\";\nexport const DELETE_CARD = \"DELETE_CARD\";\nexport const TOGGLE_IS_UPDATE = \"TOGGLE_IS_UPDATE\";\n","import { cityAPI } from \"../api/api\";\nimport {\n  SET_CITY,\n  UPDATE_CITY,\n  DELETE_CARD,\n  TOGGLE_IS_UPDATE,\n} from \"../constans\";\n\nlet initialState = {\n  city: [],\n  isUpdate: false,\n};\n\nexport const cityReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CITY:\n      return {\n        ...state,\n        city: [...state.city, action.payload],\n      };\n    case UPDATE_CITY:\n      return {\n        ...state,\n        city: state.city.filter((card) => {\n          if (card.id === action.payload.id) {\n            return [action.payload];\n          }\n          return [state.city, action.payload];\n        }),\n      };\n    case TOGGLE_IS_UPDATE:\n      return {\n        ...state,\n        isUpdate: action.payload,\n      };\n    case DELETE_CARD:\n      return {\n        ...state,\n        city: state.city.filter((card) => card.id !== action.payload),\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setCity = (payload) => ({\n  type: SET_CITY,\n  payload,\n});\nexport const onDeleteCard = (payload) => ({\n  type: DELETE_CARD,\n  payload,\n});\nexport const updateCity = (payload) => ({\n  type: UPDATE_CITY,\n  payload,\n});\nexport const toggleIsUpdate = (payload) => ({\n  type: TOGGLE_IS_UPDATE,\n  payload,\n});\n\nexport const getCity = (city) => async (dispatch) => {\n  let response = await cityAPI.getCity(city);\n\n  let cityJSON = JSON.parse(localStorage.getItem(\"reduxState\"));\n  if (cityJSON.cityPage.city == 0) {\n    dispatch(setCity(response.data));\n  } else {\n    let id;\n    id = cityJSON.cityPage.city.map((id) => id.id);\n    if (id.indexOf(response.data.id) === -1) {\n      dispatch(setCity(response.data));\n    } else {\n      return false;\n    }\n  }\n};\nexport const getUpdateCity = (id) => async (dispatch) => {\n  // dispatch(toggleIsUpdate(true));\n  let response = await cityAPI.getCityId(id); \n  dispatch(updateCity(response.data));\n  // dispatch(toggleIsUpdate(false));\n};\n","import { applyMiddleware, createStore, combineReducers } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { reducer as formReducer } from \"redux-form\";\n\nimport { cityReducer } from \"./city-reducer\";\n\nlet reducers = combineReducers({\n  cityPage: cityReducer,\n  form: formReducer,\n});\n\nconst persistedState = localStorage.getItem(\"reduxState\")\n  ? JSON.parse(localStorage.getItem(\"reduxState\"))\n  : {};\n\nexport let store = createStore(\n  reducers,\n  persistedState,\n  applyMiddleware(thunkMiddleware)\n);\n\nstore.subscribe(() => {\n  localStorage.setItem(\"reduxState\", JSON.stringify(store.getState()));\n});\n\nwindow.store = store;\n","import React from \"react\";\n\nimport stl from \"./CardInfo.module.css\";\n\nexport const temp = (temp) => {\n  if (temp > 0) {\n    return \"+\" + Math.ceil(temp);\n  }\n  if (temp <= 0) {\n    return Math.floor(temp);\n  }\n};\n\nexport const CardInfo = (props) => {\n  const { main, name, weather } = props.city;\n  return (\n    <>\n      <div className={stl.card}>\n        <h3>{name}</h3>\n        <p>Temp: {temp(main.temp)}</p>\n        {weather.map((w) => (\n          <div key={w.id}>\n            <img\n              src={`http://openweathermap.org/img/wn/${w.icon}@2x.png`}\n              alt=\"img\"\n            />\n            <p className={stl.description}>\n              {w.description.charAt(0).toUpperCase() +\n                w.description.substr(1).toLowerCase()}\n            </p>\n          </div>\n        ))}\n        <div className={stl.smallTemp}>\n          <p>Max: {temp(main.temp_max)}</p>\n          <p>Min: {temp(main.temp_min)}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { temp } from \"../Card/CardInfo/CardInfo\";\nimport stl from \"./BodyCard.module.css\";\n\nexport const BodyCard = (props) => {\n  const { weather, main, name, wind } = props;\n  return (\n    <>\n      {!weather ? (\n        <Redirect to={\"/\"} />\n      ) : (\n        <div className={stl.cardWrapper}>\n          <div className={stl.card}>\n            <div>\n              <div className={stl.cardHeader}>\n                <h2>{name}</h2>\n                <p>Temp: {temp(main.temp)}</p>\n              </div>\n\n              {weather.map((w) => (\n                <div key={w.id} className={stl.imgInfo}>\n                  <img\n                    src={`http://openweathermap.org/img/wn/${w.icon}@2x.png`}\n                    alt=\"img\"\n                  />\n                  <p>\n                    {w.description.charAt(0).toUpperCase() +\n                      w.description.substr(1).toLowerCase()}\n                  </p>\n                </div>\n              ))}\n            </div>\n            <div className={stl.info}>\n              <div className={stl.cardInfo}>\n                <h4>Feels like:</h4> <p>{temp(main.feels_like)}</p>\n              </div>\n              <div className={stl.cardInfo}>\n                <h4>Wind:</h4>\n                <p> {wind.speed} m / s, V</p>\n              </div>\n              <div className={stl.cardInfo}>\n                <h4>Pressure: </h4> <p>{main.pressure} mmHg Art.</p>\n              </div>\n              <div className={stl.cardInfo}>\n                <h4>Humidity: </h4>\n                <p>{main.humidity} %</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { BodyCard } from \"../components/BodyCard/BodyCard\";\n\nconst BodyCardContainer = React.memo((props) => {\n  const [cityCard, setCityCard] = useState();\n\n  useEffect(() => {\n    const cardId = Number(props.match.params.id);\n    let card = props.city.find((c) => c.id === cardId);\n    setCityCard({ card });\n  }, [props]);\n\n  return (\n    <>\n      {cityCard === undefined ? (\n        <CircularProgress color=\"secondary\" />\n      ) : (\n        <BodyCard {...cityCard.card} />\n      )}\n    </>\n  );\n});\nconst mapStateToProps = (state) => ({\n  city: state.cityPage.city,\n});\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, null)\n)(BodyCardContainer);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { CardInfo } from \"../Card/CardInfo/CardInfo\";\nimport stl from \"./Card.module.css\";\n\nexport const Card = ({ handleClick, city, getImage }) => {\n  return (\n    <div className={stl.card}>\n      <IconButton\n        className={stl.btnDelete}\n        aria-label=\"delete\"\n        onClick={() => handleClick(\"delete\", city.id)}\n      >\n        <DeleteIcon />\n      </IconButton>\n      <NavLink to={`/bodycard/${city.id}`}>\n        <div className={stl.cardItem}>\n          <CardInfo city={city} getImage={getImage} />\n        </div>\n      </NavLink>\n      <Button\n        className={stl.btnUpdate}\n        variant=\"outlined\"\n        size=\"small\"\n        color=\"secondary\"\n        onClick={() => handleClick(\"update\", city.id)}\n      >\n        Update\n      </Button>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { Card } from \"../components/Card/Card\";\n\nexport const CardContainer = (props) => {\n  const { onDeleteCard, onUpdateCard, id, getImageIcon } = props;\n  const handleClick = (type, id) => {\n    if (type === \"delete\") {\n      onDeleteCard(id);\n    } else if (type === \"update\") {\n      onUpdateCard(id);\n    }\n  };\n  return (\n    <>\n        <Card\n          key={id}\n          {...props}\n          handleClick={handleClick}\n          getImage={getImageIcon}\n        />\n      \n    </>\n  );\n};\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nimport stl from \"./SearchInput.module.css\";\n\nconst renderTextField = ({\n  label,\n  input,\n  meta: { touched, invalid, error },\n  ...custom\n}) => (\n  <TextField\n    className={stl.input}\n    size=\"small\"\n    id=\"outlined-basic\"\n    label=\"Enter city\"\n    variant=\"outlined\"\n    placeholder={label}\n    error={touched && invalid}\n    helperText={touched && error}\n    {...input}\n    {...custom}\n  />\n);\n\nlet SearchInput = ({ handleSubmit }) => {\n  return (\n    <form className={stl.form} onSubmit={handleSubmit}>\n      <Field\n        placeholder=\"Enter city\"\n        component={renderTextField}\n        name=\"searchCityInput\"\n        type=\"text\"\n      />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n        Search\n      </Button>\n    </form>\n  );\n};\n\nSearchInput = reduxForm({\n  form: \"newCityForm\",\n})(SearchInput);\n\nexport default SearchInput;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { compose } from \"redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { getCity, getUpdateCity, onDeleteCard } from \"../redux/city-reducer\";\nimport { CardContainer } from \"./CardContainer\";\nimport SearchInput from \"../components/SearchInput/SearchInput\";\nimport stl from \"../components/Card/Card.module.css\";\n\nconst CitiesContainer = (props) => {\n  const { city, onDeleteCard, isUpdate } = props;\n\n    window.onload = () => {\n      let id = props.city.map((id) => id.id);\n      id.forEach((id) => props.getUpdateCity(id));\n    };\n  const addCity = (values) => {\n    const { searchCityInput } = values;\n\n    if (!searchCityInput) {\n      return false;\n    } else {\n      props.getCity(searchCityInput);\n    }\n    values.searchCityInput = \"\";\n  };\n\n  const onUpdateCard = (id) => {\n    localStorage.clear(\"reduxState\");\n    props.getUpdateCity(id);\n  };\n\n  return (\n    <div>\n      <div>\n        <h2>Geting city for name</h2>\n      </div>\n      <SearchInput onSubmit={addCity} />\n\n      <div className=\"grid\">\n        {isUpdate ? (\n          <CircularProgress color=\"secondary\" className={stl.preloader} />\n        ) : (\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"flex-start\"\n                alignItems=\"flex-end\"\n              >\n                {city.map((city) => (\n                  <Grid key={city.id} item>\n                    <CardContainer\n                      city={city}\n                      onDeleteCard={onDeleteCard}\n                      onUpdateCard={onUpdateCard}\n                    />\n                  </Grid>\n                ))}\n              </Grid>\n            </Grid>\n          </Grid>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  city: state.cityPage.city,\n  isUpdate: state.cityPage.isUpdate,\n});\n\nconst mapDispatchToProps = {\n  getCity,\n  getUpdateCity,\n  onDeleteCard,\n};\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(CitiesContainer);\n","import React from \"react\";\nimport { Route, withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { Container } from \"@material-ui/core\";\n\nimport \"./App.css\";\nimport BodyCardContainer from \"./container/BodyCardContainer\";\nimport CitiesContainer from \"./container/CitiesContainer\";\n\nconst App = (props) => {\n  return (\n    <div className=\"app-wrapper\">\n      <Container maxWidth=\"md\">\n        <Route exact path=\"/\" render={() => <CitiesContainer />} />\n      </Container>\n      <Container maxWidth=\"sm\">\n        <Route path=\"/bodycard/:id?\" render={() => <BodyCardContainer />} />\n      </Container>\n    </div>\n  );\n};\n\nexport default compose(withRouter)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport { store } from \"./redux/redux-store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <HashRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardWrapper\":\"BodyCard_cardWrapper__Sm-g4\",\"card\":\"BodyCard_card__2Cou0\",\"info\":\"BodyCard_info__1koz9\",\"cardInfo\":\"BodyCard_cardInfo__31RqI\",\"imgInfo\":\"BodyCard_imgInfo__rdobw\",\"cardHeader\":\"BodyCard_cardHeader__3Z9di\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1eE8R\",\"cardItem\":\"Card_cardItem__3V5Gd\",\"btnDelete\":\"Card_btnDelete__YCPvi\",\"btnUpdate\":\"Card_btnUpdate__2-ZCH\",\"preloader\":\"Card_preloader__3Rhof\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"CardInfo_card__28T1C\",\"smallTemp\":\"CardInfo_smallTemp__X7lvy\",\"description\":\"CardInfo_description__3IwhW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SearchInput_input__2wCi4\",\"form\":\"SearchInput_form__1-yQW\"};"],"sourceRoot":""}